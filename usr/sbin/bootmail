#!/bin/sh -e
#
#    bootmail - email some people when this system (re)boots
#
#    Copyright (C) 2011 Dustin Kirkland <kirkland@ubuntu.com>
#
#    Authors:
#        Dustin Kirkland <kirkland@ubuntu.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.


# This should be comma-separated, and can be configured via debconf:
#  sudo dpkg-reconfigure bootmail
recipients=
[ -f /etc/bootmail/recipients ] && recipients="$(cat /etc/bootmail/recipients)"
if [ -z "$recipients" ]; then
	echo "No recipients defined in [/etc/bootmail/recipients]" 1>&2
	exit 0
fi

# Setup and send signed email messages, if we have the necessary tools
sign=0
if command -v apg -v gpg >/dev/null; then
	# Create gpg keys for mail signing, if not already setup
	[ -d /var/lib/bootmail ] || mkdir -p /var/lib/bootmail
	# Setup the directory
	chown root:root /var/lib/bootmail
	chmod 700 /var/lib/bootmail
	# Generate a passphrase
	if [ ! -e /var/lib/bootmail/key.passphrase ]; then
		p=$(mktemp)
		apg -a 1 -n 1 -m 40 -M nCL > "$p"
		mv "$p" /var/lib/bootmail/key.passphrase
	fi
	# Generate keys
	if [ ! -e /var/lib/bootmail/key.pub ] || [ ! -e /var/lib/bootmail/key.sec ]; then
		# Generate the keys from configuration; note that this will block until there's enough entropy
		gpg --batch --passphrase-file /var/lib/bootmail/key.passphrase --gen-key /var/lib/bootmail/key.config
	fi
	sign=1
fi

# Work against a tempfile
temp=$(mktemp)
trap "rm -f $temp 2>/dev/null || true" EXIT HUP INT QUIT TERM

# Print the header
echo "bootmail: [$(hostname)] booted on $(date)" > "$temp"
echo >> "$temp"

# Update the motd, if we're appending it
if grep -qs /etc/motd /etc/bootmail/logs; then
	run-parts --lsbsysinit /etc/update-motd.d > /var/run/motd.new
	mv -f /var/run/motd.new /var/run/motd
fi

# Concatenate all specified boot logs
if [ -f "/etc/bootmail/logs" ]; then
	for i in $(cat /etc/bootmail/logs); do
		echo >> "$temp"
		echo "==================" >> "$temp"
		echo "$i:" >> "$temp"
		echo "------------------" >> "$temp"
		cat "$i" >> "$temp"
		echo "==================" >> "$temp"
		echo >> "$temp"
	done
fi

# Configure the subject
subject="bootmail: [$(hostname)] booted"

# Send, and optionally sign the mail
if [ "$sign" = "1" ]; then
	sed -e "s/[^[:print:]]//g" "$temp" | gpg --no-default-keyring --secret-keyring /var/lib/bootmail/key.sec --keyring /var/lib/bootmail/key.pub --passphrase-file /var/lib/bootmail/key.passphrase -a -s --clearsign -u Bootmail | mail -s "$subject" "$recipients" -- -F "Bootmail" -f "noreply@$(hostname)"
else
	sed -e "s/[^[:print:]]//g" "$temp" | mail -s "$subject" "$recipients" -- -F "Bootmail" -f "noreply@$(hostname)"
fi
